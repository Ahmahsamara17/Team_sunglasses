{%- extends "base_templates/flask.py.j2" -%}

{% block setup %}
  {{- super() -}}
  {%- from 'base_templates/names.j2' import generate_names -%}
  {{- generate_names(settings, challenge.random) -}}
  {%- set settings.flask_host = "challenge.localhost" -%}
  {%- set settings.service_name = "pwnpost" -%}
  {%- set settings.first_post = ["Welcome to pwnpost!", "First Post!", "Hello World!", "Testing 123", "Initial message"][challenge.random.randrange(5)] -%}
{% endblock %}

{% block imports %}
import sqlite3
import tempfile
{% endblock %}

{% block handlers %}
class TemporaryDB:
    def __init__(self):
        self.db_file = tempfile.NamedTemporaryFile("x", suffix=".db")

    def execute(self, sql, parameters=()):
        connection = sqlite3.connect(self.db_file.name)
        connection.row_factory = sqlite3.Row
        cursor = connection.cursor()
        result = cursor.execute(sql, parameters)
        connection.commit()
        return result

db = TemporaryDB()
db.execute("""CREATE TABLE posts AS SELECT ? AS content""", ["{{settings.first_post}}"])

@app.route("/{{settings.endpoint_challenge}}", methods=["POST"])
def challenge_post():
    content = flask.request.form.get("{{settings.parameter_content}}", "")
    db.execute("INSERT INTO posts VALUES (?)", [content])
    return flask.redirect(flask.request.path)

@app.route("/{{settings.endpoint_challenge}}", methods=["GET"])
def challenge_get():
    page = "<html><body>\nWelcome to {{settings.service_name}}, the anonymous posting service. Post away!\n"
    page += "<form method=post>Post:<input type=text name={{settings.parameter_content}}><input type=submit value=Submit></form>\n"

    for post in db.execute("SELECT content FROM posts").fetchall():
        page += "<hr>" + post["content"] + "\n"

    return page + "</body></html>"
{% endblock %}